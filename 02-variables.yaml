# In Ansible if you attempt to print a variable that is not declared, ANSIBLE throws an exception!
- name: Demo on variables usage
  hosts: all
  vars:
    URL: play.google.com  # Declaring variable at playlevel, all the tasks of this play inherits this value. (Global Var)
  vars_files:
    - "{{ENV}}.yaml"  
  tasks:
    - name: Printing the variable
      ansible.builtin.debug:
        msg: Value of the URL is {{URL}} 

    - name: Printing the variable
      ansible.builtin.debug:
        msg: Value of the URL is {{URL}}  
      vars:          # Declaring variable at task level : Local variables
        URL: task.google.com

    - name: Printing the Variable from Command Line
      ansible.builtin.debug:
        msg: Value of the xyz is {{XYZ}}  # before 02-variable we add -e XYZ=xyz.google.com, then it prints, otherwise it throws error as undeclared

    #- name: Printing the Variable from Command Line
     # ansible.builtin.debug:
      # msg: Value of the xyz is {{XYZ}}

    - name: Printing ENV Specific Values
      ansible.builtin.debug:   # Debug is the module to print something
       msg: "Instance Type is {{INSTANCE_TYPE}} and disk size is {{DISK_SIZE}}"

      # - name: Printing the unknown variable
      #   ansible.builtin.debug:
      #     msg: Value of the xyz is {{XYZ}} # In Bash, we print a variable by using ${var}, but here in YAML we use {{var}}


  # Variable Precedence : Command Line Variables > local variables > Global Variables