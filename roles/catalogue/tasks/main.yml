- name: Configuring the Yum Repo
  ansible.builtin.shell: yum install https://rpm.nodesource.com/pub_16.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y # SHELL module won't offer the output by default on screen, if you want you can register the output.
  ignore_errors: true # we use it because once installed, on second run nodejs will give error

- name: Installing {{COMPONENT}} Package
  ansible.builtin.package:
    name: nodejs
    state: present 

- name: Creating {{APPUSER}} account
  ansible.builtin.user:
    name: "{{APPUSER}}" # we need to enclose appuser within quotes because we start with this var name here

- name: Download and Extract {{COMPONENT}} Schema
  ansible.builtin.unarchive:
    src: https://github.com/stans-robot-project/{{COMPONENT}}/archive/main.zip
    dest: /tmp
    remote_src: yes    

- name: Performing {{COMPONENT}} Cleanup
  ansible.builtin.file:
    path: /home/{{APPUSER}}/{{COMPONENT}}
    state: absent    

- name: Copying {{COMPONENT}} to {{APPUSER}}
  ansible.builtin.copy:
    src: /tmp/{{COMPONENT}}-main/
    dest: /home/{{APPUSER}}/{{COMPONENT}}/
    owner: "{{APPUSER}}"
    group: "{{APPUSER}}"
    remote_src: yes

- name: Generating the {{COMPONENT}} Artifacts
  community.general.npm:
    path: /home/{{APPUSER}}/{{COMPONENT}}/ 

- name: Copying the {{COMPONENT}} systemd file
  ansible.builtin.template:
    src: systemd.service # Location of the file on the machine where you're running this script
    dest: /etc/systemd/system/{{COMPONENT}}.service 

- name: Restarting the {{COMPONENT}} Service
  ansible.builtin.systemd:
    name: "{{COMPONENT}}"
    state: restarted
    enabled: yes
    daemon_reload: yes           
        
    
  