- name: Configuring the {{COMPONENT}} Repo
  ansible.builtin.copy:
    src: mysql.repo # Location of the file on the machine where you're running this script
    dest: /etc/yum.repos.d/mysql.repo    # 
    
- name: Installing {{COMPONENT}} Package
  ansible.builtin.package:
    name: 
       - mysql-community-server
       - python3-PyMySQL
       - MySQL-python      
    state: present 

- name: Starting service {{COMPONENT}}
  ansible.builtin.systemd:
    name: mysqld
    state: started # since it is a DB so we just start, dont just restart
    enabled: yes  

- name: Extract the mysql log file
  ansible.builtin.slurp:
    src: /var/log/mysqld.log
  register: psw_log 
# if any of the task in the block fails, task in the rescue will be executed, This is exception handling in ansible
- name: Verifying the password
  block:
    - name: Get MySQL version with non-default credentials
      community.mysql.mysql_info:  
        login_user: root
        login_password: "{{MYSQL_PSW}}"
        filter: version
  rescue:          # if above block fails which means password is not roboshop then rescue ops will be exec                                              
    - name: Extracting the password from log file  # | b64decode is to encrypt a file or key, .* means include everything in between
      ansible.builtin.set_fact:   # this module helps querying the info available in a register, whereener u extracted value in a reg using var
        DEFAULT_PASSWORD: "{{psw_log['content'] | b64decode | regex_findall('.*temporary password.*') | join() | split(' ') | last}}" # join command with no space will join the entire string

    - name: Changing default root password  # split command will split the entire string based on space and last cmd will output last element in string
      ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY 'RoboShop@1';"| mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}" # never use dollar with var in ansible



                                   